# Enable RBAC
rbac:
  create: true
  security:
    enable: false

# Create ServiceAccount
serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

controller:
  kind: "Deployment" # DaemonSet
  name: controller
  image:
    repository: haproxytech/kubernetes-ingress
    pullPolicy: IfNotPresent

    # default is Chart.appVersion
    # tag: ""

  replicaCount: 1

  # For daemonset
  updateStrategy:
    type: RollingUpdate
    maxUnavailable: 1

  ## Name of the ingress class to route through this controller
  ingressClass: haproxytech

  namespace:
    # optional, if listed only selected namespaces will be monitored
    whitelist: []
    # optional, if listed only selected namespaces will be excluded
    blacklist: []

  ## Additional command line arguments to pass to haproxy-ingress-controller
  ##
  ## key:value, value can be null for a flag
  extraArgs: {}

  ## Additional environment variables to set
  extraEnvs: []

  # labels to add to the pod container metadata
  podLabels: {}

  ## Required only if defaultBackend.enabled = false
  ## Must be <namespace>/<service_name>
  ##
  defaultBackendService: ""

  # ConfigMap to configure ingress controller
  config: {}
    # check: "enabled"
    # forwarded-for: "enabled"
    # load-balance: "roundrobin"
    # maxconn: "2000"
    # nbthread: "1"
    # pod-maxconn: ""
    # rate-limit: "OFF"
    # rate-limit-expire: "30m"
    # rate-limit-interval: "10s"
    # rate-limit-size: "100k"
    # servers-increment: "42"
    # servers-increment-max-disabled: "66"
    # ssl-certificate: "default/tls-secret"
    # ssl-numproc: "1"
    # ssl-redirect: "ON"
    # ssl-redirect-code: "302"
    # timeout-http-request: "5s"
    # timeout-connect: "5s"
    # timeout-client: "50s"
    # timeout-queue: "5s"
    # timeout-server: "50s"
    # timeout-tunnel: "1h"
    # timeout-http-keep-alive: "1m"
    # whitelist: ""
    # whitelist-with-rate-limit: ""

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the controller services are available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    loadBalancerIP: ""
    loadBalancerSourceRanges: []

    ## Set external traffic policy to: "Local" to preserve source IP on
    ## providers supporting it
    ## Ref: https://kubernetes.io/docs/tutorials/services/source-ip/#source-ip-for-services-with-typeloadbalancer
    externalTrafficPolicy: ""

    healthCheckNodePort: 0
    type: LoadBalancer

  resources: {}

  ## Liveness and readiness probe values
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  livenessProbe:
    path: /healthz
    port: 1042
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  readinessProbe:
    path: /healthz
    port: 1042
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

# Default 404 backend
defaultBackend:
  ## If false, controller.defaultBackendService must be provided
  enabled: true

  name: default-backend
  image:
    repository: gcr.io/google_containers/defaultbackend
    tag: "1.0"
    pullPolicy: IfNotPresent

  ## Node tolerations for server scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
  #  - key: "key"
  #    operator: "Equal|Exists"
  #    value: "value"
  #    effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  affinity: {}

  ## Node labels for default backend pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Annotations to be added to default backend pods
  ##
  podAnnotations: {}

  # labels to add to the pod container metadata
  podLabels: {}
  #  key: value

  # Deployment
  replicaCount: 1

  # PodDisruptionBudget
  minAvailable: 1

  resources:
    limits:
      cpu: 10m
      memory: 20Mi
  # requests:
  #   cpu: 10m
  #   memory: 20Mi

  service:
    name: ingress-default-backend
    annotations: {}
    clusterIP: ""

    ## List of IP addresses at which the default backend service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    servicePort: 8080
    type: ClusterIP
